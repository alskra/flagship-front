mixin table-data(type = 'events')
  .table-responsive&attributes(attributes)
    .overflow-clip
      table.table-data(
        class=`table-data--${type.replace('-not-filled', '')}`
        x-data="tableData"
        x-bind="tableData"
      )
        if type === 'events'
          thead
            tr
              th(
                data-sort="targetGroup"
                x-bind="sortBtn"
              )
                span.table-data__sort
                  | Группа
                  icon-svg(name="filter")
              th: span Название события
              th(
                data-sort="datetime"
                x-bind="sortBtn"
              )
                span.table-data__sort
                  | Дата
                  icon-svg(name="filter")
              th: span Ссылка на регистрацию
              th: span Ссылка на этапы
              th(colspan="3"): span Действия

          tbody(x-ref="body")
            each item, index in Array(10)
              tr(
                data-target-group="1-student"
                data-datetime=`2024-07-${10 + index}T12:00Z`
              )
                td: span.icon.icon-student.table-data__target-group
                td: span Новое событие Флагманы Образования
                td: span #{10 + index}.07.2024
                td: a(href="") зарегистрироваться
                td: a(href="") этапы
                td: +btn({tag: 'a', icons: ['qr']}).btn--action(title="QR-код")
                td: +btn({tag: 'a', icons: ['edit']}).btn--action(title="Редактировать")
                td: +btn({tag: 'a', icons: ['remove']}).btn--action(title="Удалить")

              tr(
                data-target-group="2-teacher"
                data-datetime=`2024-07-${11 + index}T12:00Z`
              )
                td: span.icon.icon-teacher.table-data__target-group
                td: span Новое событие Флагманы Образования
                td: span #{11 + index}.07.2024
                td: a(href="") зарегистрироваться
                td: a(href="") этапы
                td: +btn({tag: 'a', icons: ['qr']}).btn--action(title="QR-код")
                td: +btn({tag: 'a', icons: ['edit']}).btn--action(title="Редактировать")
                td: +btn({tag: 'a', icons: ['remove']}).btn--action(title="Удалить")

              tr(
                data-target-group="3-manager"
                data-datetime=`2024-07-${12 + index}T12:00Z`
              )
                td: span.icon.icon-manager.table-data__target-group
                td: span Новое событие Флагманы Образования
                td: span #{12 + index}.07.2024
                td: a(href="") зарегистрироваться
                td: a(href="") этапы
                td: +btn({tag: 'a', icons: ['qr']}).btn--action(title="QR-код")
                td: +btn({tag: 'a', icons: ['edit']}).btn--action(title="Редактировать")
                td: +btn({tag: 'a', icons: ['remove']}).btn--action(title="Удалить")

        if type === 'cabinet'
          thead
            tr
              th: span Фамилия
              th: span Имя
              th: span Отчество
              th: span Статус

          tbody(x-ref="body")
            each item, index in Array(10)
              tr
                td: span Иванов
                td: span Иван
                td: span Петрович
                td: span.table-data__status(x-bind="status")

              tr
                td: span Петров
                td: span Петр
                td: span Иванович
                td: span.table-data__status(x-bind="status")

              tr
                td: span Сидоров
                td: span Николай
                td: span Александрович
                td: span.table-data__status(x-bind="status")

        if type === 'tribune-not-filled'
          thead
            tr
              th: span №
              th: span Фамилия
              th: span Имя
              th: span Отчество
              th: span Статус
              th(colspan="2"): span Таймер

          tbody(x-ref="body")
            each item, index in Array(6)
              tr
                td
                td
                td
                td
                td
                td
                td

        if type === 'tribune'
          thead
            tr
              th: span №
              th: span Фамилия
              th: span Имя
              th: span Отчество
              th: span Статус
              th: span Таймер

          tbody(x-ref="body")
            each item, index in Array(2)
              tr.stage-item(
                class=`stage-item--${type}`
                x-data="stageItem({ isStarted: false, timeLeft: 0 })"
                x-bind="stageItem"
                x-cloak
              )
                td: span= index * 3 + 1
                td: span Иванов
                td: span Иван
                td: span Петрович
                td: span.table-data__status(x-bind="status")
                td
                  .table-data__timer
                    div(x-show="!isStarted")
                      +form-field({tag: 'select'})(x-model.number="controlTime")
                        option(value=5 * 1000) 5 сек.
                        option(value=5 * 60 * 1000) 5 мин.
                        option(value=15 * 60 * 1000) 15 мин.
                        option(value=30 * 60 * 1000) 30 мин.
                        option(value=45 * 60 * 1000) 45 мин.
                        option(value=60 * 60 * 1000) 1 час
                        option(value=90 * 60 * 1000) 1 час 30 мин

                    div(x-show="!isStarted")
                      +btn({content: 'Старт'}).btn--accent.btn--width-full(
                        x-bind="btnStart"
                        x-on:click="beforeSendData(); fetch('', { method: 'POST', body: controlTime }).then(() => { afterSendData() })"
                      )

                    div(x-show="isStarted")
                      +form-field().form-field.form-field--timer(
                        readonly
                        x-data="timer"
                        x-bind:value="formatTime"
                      )

              tr(
                class=`stage-item--${type}`
                x-data=`stageItem({ isStarted: true, timeLeft: ${45000 * (index + 1)} })`
                x-bind="stageItem"
                x-cloak
              )
                td: span= index * 3 + 2
                td: span Петров
                td: span Петр
                td: span Иванович
                td: span.table-data__status(x-bind="status")
                td
                  .table-data__timer
                    div(x-show="!isStarted")
                      +form-field({tag: 'select'})(x-model.number="controlTime")
                        option(value=5 * 1000) 5 сек.
                        option(value=5 * 60 * 1000) 5 мин.
                        option(value=15 * 60 * 1000) 15 мин.
                        option(value=30 * 60 * 1000) 30 мин.
                        option(value=45 * 60 * 1000) 45 мин.
                        option(value=60 * 60 * 1000) 1 час
                        option(value=90 * 60 * 1000) 1 час 30 мин

                    div(x-show="!isStarted")
                      +btn({content: 'Старт'}).btn--accent.btn--width-full(
                        x-bind="btnStart"
                        x-on:click="beforeSendData(); fetch('', { method: 'POST', body: controlTime }).then(() => { afterSendData() })"
                      )

                    div(x-show="isStarted")
                      +form-field().form-field.form-field--timer(
                        readonly
                        x-data="timer"
                        x-bind:value="formatTime"
                      )

              tr(
                class=`stage-item--${type}`
                x-data="stageItem({ isStarted: true, timeLeft: 0 })"
                x-bind="stageItem"
                x-cloak
              )
                td: span= index * 3 + 3
                td: span Сидоров
                td: span Николай
                td: span Александрович
                td: span.table-data__status(x-bind="status")
                td
                  .table-data__timer
                    div(x-show="!isStarted")
                      +form-field({tag: 'select'})(x-model.number="controlTime")
                        option(value=5 * 1000) 5 сек.
                        option(value=5 * 60 * 1000) 5 мин.
                        option(value=15 * 60 * 1000) 15 мин.
                        option(value=30 * 60 * 1000) 30 мин.
                        option(value=45 * 60 * 1000) 45 мин.
                        option(value=60 * 60 * 1000) 1 час
                        option(value=90 * 60 * 1000) 1 час 30 мин

                    div(x-show="!isStarted")
                      +btn({content: 'Старт'}).btn--accent.btn--width-full(
                        x-bind="btnStart"
                        x-on:click="beforeSendData(); fetch('', { method: 'POST', body: controlTime }).then(() => { afterSendData() })"
                      )

                    div(x-show="isStarted")
                      +form-field().form-field.form-field--timer(
                        readonly
                        x-data="timer"
                        x-bind:value="formatTime"
                      )

        if type === 'brainstorm-not-filled'
          thead
            tr
              th: span Фамилия
              th: span Имя
              th: span Отчество

          tbody(x-ref="body")
            each item, index in Array(24)
              tr
                td: span Иванов
                td: span Иван
                td: span Петрович

        if ['brainstorm', 'conference', 'review'].includes(type)
          thead
            tr
              th: span Фамилия
              th: span Имя
              th: span Отчество
              th: span Статус

          tbody(x-ref="body")
            each item, index in Array(6)
              tr
                td: span Иванов
                td: span Иван
                td: span Петрович
                td: span.table-data__status(x-bind="status")
